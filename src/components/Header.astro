---
import HeaderLink from './HeaderLink.astro';

const currentPath = Astro.url.pathname;
const currentLocale = currentPath.startsWith('/ja') ? '/ja' : '';
const basePath = currentPath.replace(/^\/(en|ja)/, '');

const homeUrl = `${currentLocale}/`;
const blogUrl = `${currentLocale}/blog`;
// const favoritesUrl = `${currentLocale}/favorites`;

const isHomeActive = currentPath === '/' || currentPath === '/ja/';
const isBlogActive = currentPath.startsWith('/blog') || currentPath.startsWith('/ja/blog');
// const isFavoritesActive = currentPath.startsWith('/favorites') || currentPath.startsWith('/ja/favorites');
const isENActive = currentLocale === '';
const isJPActive = currentLocale === '/ja';
---

<header>
	<nav>
		<div class="internal-links">
			<HeaderLink href={homeUrl} isActive={isHomeActive}>Home</HeaderLink>
			<HeaderLink href={blogUrl} isActive={isBlogActive}>Blog</HeaderLink>
			<!--<HeaderLink href={favoritesUrl} isActive={isFavoritesActive}>Favorites</HeaderLink>-->
		</div>

		<button class="toggle-theme">
			<span class="material-symbols-outlined light-icon">light_mode</span>
			<span class="material-symbols-outlined dark-icon">brightness_3</span>
		</button>

		<!-- Language switch buttons -->
		<nav>
			<HeaderLink href={basePath} isActive={isENActive}>EN</HeaderLink>
			<HeaderLink href={`/ja${basePath}`} isActive={isJPActive}>JP</HeaderLink>
		</nav>
	</nav>
</header>

<style>
header {
	background-color: var(--background-color);
	border-bottom: 2px dashed #1da1f2;
	box-shadow: 0 2px 8px rgba(var(--black), 5%);
	margin: 0;
	padding: 0 1em;
}

h2 {
	font-size: 1.25rem;
	margin: 0;
}

h2 a,
h2 a.active {
	text-decoration: none;
}

nav {
	align-items: center;
	display: flex;
	justify-content: space-between;
}

.toggle-theme {
	background: none;
	border: none;
	cursor: pointer;
	font-size: 1.5rem;
	height: 1.5rem;
	padding: 0;
	width: 1.5rem;
}

.dark-icon {
	display: none;
}

html[data-theme="dark"] {
	.light-icon {
		display: none;
	}

	.toggle-theme {
		transform: rotate(145deg);
	}

	.dark-icon {
		display: inline;
	}
}
</style>

<script defer>
document.addEventListener('DOMContentLoaded', () => {
	const setTheme = (theme) => {
		document.documentElement.setAttribute('data-theme', theme);
		localStorage.setItem('theme', theme);
	};

	const currentTheme = localStorage.getItem('theme') || 'light';
	setTheme(currentTheme);

	const toggleThemeButton = document.querySelector('.toggle-theme');
	if (toggleThemeButton) {
		toggleThemeButton.addEventListener('click', () => {
			const newTheme = document.documentElement.getAttribute('data-theme') === 'light' ? 'dark' : 'light';
			setTheme(newTheme);
		});
	} else {
		console.error('Toggle button not found.');
	}
});
</script>
